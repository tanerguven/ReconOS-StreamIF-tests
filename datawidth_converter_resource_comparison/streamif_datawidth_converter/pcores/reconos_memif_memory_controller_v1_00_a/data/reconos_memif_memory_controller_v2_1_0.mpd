###################################################################
##
## Name     : reconos_memif_memory_controller
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN reconos_memif_memory_controller

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION IP_GROUP = MICROBLAZE:USER
OPTION DESC = ReconOS - MEMIF Memory controller
OPTION LONG_DESC = The memory controller connects the memory subsystem of ReconOS to the memory bus of the system as an AXI master.
#OPTION ARCH_SUPPORT_MAP = (others=DEVELOPMENT)


## Bus Interfaces
BUS_INTERFACE BUS = M_AXI, BUS_STD = AXI, BUS_TYPE = MASTER
BUS_INTERFACE BUS = CTRL_FIFO_Hwt, BUS_STD = S_FIFO, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = CTRL_FIFO_Mmu, BUS_STD = S_FIFO, BUS_TYPE = INITIATOR, ISVALID = C_USE_MMU_PORT
BUS_INTERFACE BUS = MEMIF_FIFO_Mmu, BUS_STD = M_FIFO, BUS_TYPE = INITIATOR, ISVALID = C_USE_MMU_PORT
BUS_INTERFACE BUS = MEMIF_FIFO_Hwt2Mem, BUS_STD = S_FIFO, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = MEMIF_FIFO_Mem2Hwt, BUS_STD = M_FIFO, BUS_TYPE = INITIATOR

## Generics for VHDL or Parameters for Verilog
PARAMETER C_MEMIF_FIFO_WIDTH = 32, DT = INTEGER
PARAMETER C_CTRL_FIFO_WIDTH = 32, DT = INTEGER
PARAMETER C_MEMIF_LENGTH_WIDTH = 24, DT = INTEGER
PARAMETER C_USE_MMU_PORT = TRUE , DT = BOOLEAN

PARAMETER C_FAMILY = virtex6, DT = STRING
PARAMETER C_M_AXI_ADDR_WIDTH = 32, DT = INTEGER, BUS = M_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_M_AXI_DATA_WIDTH = 32, DT = INTEGER, BUS = M_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_MAX_BURST_LEN = 256, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_ADDR_PIPE_DEPTH = 1, DT = INTEGER, RANGE = (1:14)
PARAMETER C_NATIVE_DATA_WIDTH = 32, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_LENGTH_WIDTH = 12, DT = INTEGER, RANGE = (12:20)


## Ports
PORT MEMIF_FIFO_Hwt2Mem_Data = "S_FIFO_Data", DIR = I, VEC = [C_MEMIF_FIFO_WIDTH - 1:0], BUS = MEMIF_FIFO_Hwt2Mem
PORT MEMIF_FIFO_Hwt2Mem_Fill = "S_FIFO_Fill", DIR = I, VEC = [15:0], BUS = MEMIF_FIFO_Hwt2Mem
PORT MEMIF_FIFO_Hwt2Mem_Empty = "S_FIFO_Empty", DIR = I, BUS = MEMIF_FIFO_Hwt2Mem
PORT MEMIF_FIFO_Hwt2Mem_RE = "S_FIFO_RE", DIR = O, BUS = MEMIF_FIFO_Hwt2Mem

PORT MEMIF_FIFO_Mem2Hwt_Data = "M_FIFO_Data", DIR = O, VEC = [C_MEMIF_FIFO_WIDTH - 1:0], BUS = MEMIF_FIFO_Mem2Hwt
PORT MEMIF_FIFO_Mem2Hwt_Rem = "M_FIFO_Rem", DIR = I, VEC = [15:0], BUS = MEMIF_FIFO_Mem2Hwt
PORT MEMIF_FIFO_Mem2Hwt_Full = "M_FIFO_Full", DIR = I, BUS = MEMIF_FIFO_Mem2Hwt
PORT MEMIF_FIFO_Mem2Hwt_WE = "M_FIFO_WE", DIR = O, BUS = MEMIF_FIFO_Mem2Hwt

PORT CTRL_FIFO_Hwt_Data = "S_FIFO_Data", DIR = I, VEC = [C_MEMIF_FIFO_WIDTH - 1:0], BUS = CTRL_FIFO_Hwt
PORT CTRL_FIFO_Hwt_Fill = "S_FIFO_Fill", DIR = I, VEC = [15:0], BUS = CTRL_FIFO_Hwt
PORT CTRL_FIFO_Hwt_Empty = "S_FIFO_Empty", DIR = I, BUS = CTRL_FIFO_Hwt
PORT CTRL_FIFO_Hwt_RE = "S_FIFO_RE", DIR = O, BUS = CTRL_FIFO_Hwt

PORT MEMIF_FIFO_Mmu_Data = "M_FIFO_Data", DIR = O, VEC = [C_MEMIF_FIFO_WIDTH - 1:0], BUS = MEMIF_FIFO_Mmu, ISVALID = C_USE_MMU_PORT
PORT MEMIF_FIFO_Mmu_Rem = "M_FIFO_Rem", DIR = I, VEC = [15:0], BUS = MEMIF_FIFO_Mmu, ISVALID = C_USE_MMU_PORT
PORT MEMIF_FIFO_Mmu_Full = "M_FIFO_Full", DIR = I, BUS = MEMIF_FIFO_Mmu, ISVALID = C_USE_MMU_PORT
PORT MEMIF_FIFO_Mmu_WE = "M_FIFO_WE", DIR = O, BUS = MEMIF_FIFO_Mmu, ISVALID = C_USE_MMU_PORT

PORT CTRL_FIFO_Mmu_Data = "S_FIFO_Data", DIR = I, VEC = [C_MEMIF_FIFO_WIDTH - 1:0], BUS = CTRL_FIFO_Mmu, ISVALID = C_USE_MMU_PORT
PORT CTRL_FIFO_Mmu_Fill = "S_FIFO_Fill", DIR = I, VEC = [15:0], BUS = CTRL_FIFO_Mmu, ISVALID = C_USE_MMU_PORT
PORT CTRL_FIFO_Mmu_Empty = "S_FIFO_Empty", DIR = I, BUS = CTRL_FIFO_Mmu, ISVALID = C_USE_MMU_PORT
PORT CTRL_FIFO_Mmu_RE = "S_FIFO_RE", DIR = O, BUS = CTRL_FIFO_Mmu, ISVALID = C_USE_MMU_PORT

PORT MEMCTRL_Clk = "", DIR = I, SIGIS = CLK
PORT MEMCTRL_Rst = "", DIR = I, SIGIS = RST

PORT M_AXI_ACLK = "", DIR = I, SIGIS = CLK, BUS = M_AXI
PORT M_AXI_ARESETN = ARESETN, DIR = I, SIGIS = RST, BUS = M_AXI
PORT MD_ERROR = "", DIR = O
PORT M_AXI_ARREADY = ARREADY, DIR = I, BUS = M_AXI
PORT M_AXI_ARVALID = ARVALID, DIR = O, BUS = M_AXI
PORT M_AXI_ARADDR = ARADDR, DIR = O, VEC = [(C_M_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI
PORT M_AXI_ARLEN = ARLEN, DIR = O, VEC = [7:0], BUS = M_AXI
PORT M_AXI_ARSIZE = ARSIZE, DIR = O, VEC = [2:0], BUS = M_AXI
PORT M_AXI_ARBURST = ARBURST, DIR = O, VEC = [1:0], BUS = M_AXI
PORT M_AXI_ARPROT = ARPROT, DIR = O, VEC = [2:0], BUS = M_AXI
PORT M_AXI_RREADY = RREADY, DIR = O, BUS = M_AXI
PORT M_AXI_RVALID = RVALID, DIR = I, BUS = M_AXI
PORT M_AXI_RDATA = RDATA, DIR = I, VEC = [(C_M_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI
PORT M_AXI_RRESP = RRESP, DIR = I, VEC = [1:0], BUS = M_AXI
PORT M_AXI_RLAST = RLAST, DIR = I, BUS = M_AXI
PORT M_AXI_AWREADY = AWREADY, DIR = I, BUS = M_AXI
PORT M_AXI_AWVALID = AWVALID, DIR = O, BUS = M_AXI
PORT M_AXI_AWADDR = AWADDR, DIR = O, VEC = [(C_M_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI
PORT M_AXI_AWLEN = AWLEN, DIR = O, VEC = [7:0], BUS = M_AXI
PORT M_AXI_AWSIZE = AWSIZE, DIR = O, VEC = [2:0], BUS = M_AXI
PORT M_AXI_AWBURST = AWBURST, DIR = O, VEC = [1:0], BUS = M_AXI
PORT M_AXI_AWPROT = AWPROT, DIR = O, VEC = [2:0], BUS = M_AXI
PORT M_AXI_WREADY = WREADY, DIR = I, BUS = M_AXI
PORT M_AXI_WVALID = WVALID, DIR = O, BUS = M_AXI
PORT M_AXI_WDATA = WDATA, DIR = O, VEC = [(C_M_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = M_AXI
PORT M_AXI_WSTRB = WSTRB, DIR = O, VEC = [((C_M_AXI_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = M_AXI
PORT M_AXI_WLAST = WLAST, DIR = O, BUS = M_AXI
PORT M_AXI_BREADY = BREADY, DIR = O, BUS = M_AXI
PORT M_AXI_BVALID = BVALID, DIR = I, BUS = M_AXI
PORT M_AXI_BRESP = BRESP, DIR = I, VEC = [1:0], BUS = M_AXI

PORT M_AXI_AWCACHE = AWCACHE, DIR = O, VEC = [3:0], BUS = M_AXI
PORT M_AXI_ARCACHE = ARCACHE, DIR = O, VEC = [3:0], BUS = M_AXI
PORT M_AXI_AWUSER = AWUSER, DIR = O, VEC = [4:0], BUS = M_AXI
PORT M_AXI_ARUSER = ARUSER, DIR = O, VEC = [4:0], BUS = M_AXI

END
