#-- Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
#--
#-- This file contains confidential and proprietary information
#-- of Xilinx, Inc. and is protected under U.S. and
#-- international copyright and other intellectual property
#-- laws.
#--
#-- DISCLAIMER
#-- This disclaimer is not a license and does not grant any
#-- rights to the materials distributed herewith. Except as
#-- otherwise provided in a valid license issued to you by
#-- Xilinx, and to the maximum extent permitted by applicable
#-- law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
#-- WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
#-- AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
#-- BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
#-- INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
#-- (2) Xilinx shall not be liable (whether in contract or tort,
#-- including negligence, or under any other theory of
#-- liability) for any loss or damage of any kind or nature
#-- related to, arising under or in connection with these
#-- materials, including for any direct, or any indirect,
#-- special, incidental, or consequential loss or damage
#-- (including loss of data, profits, goodwill, or any type of
#-- loss or damage suffered as a result of any action brought
#-- by a third party) even if such damage or loss was
#-- reasonably foreseeable or Xilinx had been advised of the
#-- possibility of the same.
#--
#-- CRITICAL APPLICATIONS
#-- Xilinx products are not designed or intended to be fail-
#-- safe, or for use in any application requiring fail-safe
#-- performance, such as life-support or safety devices or
#-- systems, Class III medical devices, nuclear facilities,
#-- applications related to the deployment of airbags, or any
#-- other applications that could lead to death, personal
#-- injury, or severe property or environmental damage
#-- (individually and collectively, "Critical
#-- Applications"). Customer assumes the sole risk and
#-- liability of any use of Xilinx products in Critical
#-- Applications, subject only to applicable laws and
#-- regulations governing limitations on product liability.
#--
#-- THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
#-- PART OF THIS FILE AT ALL TIMES.

###################################################################
##
## Name     : axi4_stream_to_full_ip_top
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN axi4_stream_to_full_ip_top

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE


## Bus Interfaces
BUS_INTERFACE BUS = M00_AXI, BUS_STD = AXI, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = S01_AXIS, BUS_STD = AXIS, BUS_TYPE = TARGET
BUS_INTERFACE BUS = S2MM_CTRL, BUS_STD = S2MM_CTRL, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = STREAMIF_CTRL, BUS_STD = STREAMIF_CTRL, BUS_TYPE = TARGET

## Generics for VHDL or Parameters for Verilog
PARAMETER C_M_TARGET_SLAVE_BASE_ADDR = 0x00000000
PARAMETER C_M00_AXI_DATA_WIDTH = 0x00000020
PARAMETER C_M00_AXI_BURST_LEN = 0x00000100
PARAMETER C_M00_AXI_ID_WIDTH = 0x00000001
PARAMETER C_M00_AXI_ADDR_WIDTH = 0x00000020
PARAMETER C_M00_AXI_AWUSER_WIDTH = 0x00000001
PARAMETER C_M00_AXI_ARUSER_WIDTH = 0x00000001
PARAMETER C_M00_AXI_WUSER_WIDTH = 0x00000001
PARAMETER C_M00_AXI_RUSER_WIDTH = 0x00000001
PARAMETER C_M00_AXI_BUSER_WIDTH = 0x00000001
PARAMETER C_S01_AXIS_TDATA_WIDTH = 0x00000020
PARAMETER C_S00_AXI_DATA_WIDTH = 0x00000020
PARAMETER C_S00_AXI_ADDR_WIDTH = 0x00000005
PARAMETER C_S00_AXI_BASEADDR = 0x00000000
PARAMETER C_S00_AXI_HIGHADDR = 0xffffffff

## Ports
PORT ACLK = "", DIR = I, SIGIS = CLK
PORT ARESETN = "", DIR = I, SIGIS = RST
PORT S2MM_CTRL_Addr = ADDR, DIR = I, VEC = [31:0], BUS = S2MM_CTRL
PORT S2MM_CTRL_Start = START, DIR = I, BUS = S2MM_CTRL
PORT S2MM_CTRL_Enabled = ENABLED, DIR = I, BUS = S2MM_CTRL
PORT S2MM_CTRL_Idle = IDLE, DIR = O, BUS = S2MM_CTRL
PORT STREAMIF_CTRL_Addr = ADDR, DIR = I, VEC = [31:0], BUS = STREAMIF_CTRL
PORT STREAMIF_CTRL_AddrValid = ADDRVALID, DIR = I, BUS = STREAMIF_CTRL
PORT STREAMIF_CTRL_Start = START, DIR = I, BUS = STREAMIF_CTRL
PORT STREAMIF_CTRL_Idle = IDLE, DIR = O, BUS = STREAMIF_CTRL
PORT S01_AXIS_TREADY = TREADY, DIR = O, BUS = S01_AXIS
PORT S01_AXIS_TDATA = TDATA, DIR = I, VEC = [(C_S01_AXIS_TDATA_WIDTH-1):0], BUS = S01_AXIS
PORT S01_AXIS_TSTRB = TSTRB, DIR = I, VEC = [((C_S01_AXIS_TDATA_WIDTH/8)-1):0], BUS = S01_AXIS
PORT S01_AXIS_TLAST = TLAST, DIR = I, BUS = S01_AXIS
PORT S01_AXIS_TVALID = TVALID, DIR = I, BUS = S01_AXIS
PORT M00_AXI_AWID = AWID, DIR = O, VEC = [(C_M00_AXI_ID_WIDTH-1):0], BUS = M00_AXI
PORT M00_AXI_AWADDR = AWADDR, DIR = O, VEC = [(C_M00_AXI_ADDR_WIDTH-1):0], BUS = M00_AXI
PORT M00_AXI_AWLEN = AWLEN, DIR = O, VEC = [7:0], BUS = M00_AXI
PORT M00_AXI_AWSIZE = AWSIZE, DIR = O, VEC = [2:0], BUS = M00_AXI
PORT M00_AXI_AWBURST = AWBURST, DIR = O, VEC = [1:0], BUS = M00_AXI
PORT M00_AXI_AWLOCK = AWLOCK, DIR = O, BUS = M00_AXI
PORT M00_AXI_AWCACHE = AWCACHE, DIR = O, VEC = [3:0], BUS = M00_AXI
PORT M00_AXI_AWPROT = AWPROT, DIR = O, VEC = [2:0], BUS = M00_AXI
PORT M00_AXI_AWQOS = AWQOS, DIR = O, VEC = [3:0], BUS = M00_AXI
PORT M00_AXI_AWUSER = AWUSER, DIR = O, VEC = [(C_M00_AXI_AWUSER_WIDTH-1):0], BUS = M00_AXI
PORT M00_AXI_AWVALID = AWVALID, DIR = O, BUS = M00_AXI
PORT M00_AXI_AWREADY = AWREADY, DIR = I, BUS = M00_AXI
PORT M00_AXI_WDATA = WDATA, DIR = O, VEC = [(C_M00_AXI_DATA_WIDTH-1):0], BUS = M00_AXI
PORT M00_AXI_WSTRB = WSTRB, DIR = O, VEC = [((C_M00_AXI_DATA_WIDTH/8)-1):0], BUS = M00_AXI
PORT M00_AXI_WLAST = WLAST, DIR = O, BUS = M00_AXI
PORT M00_AXI_WUSER = WUSER, DIR = O, VEC = [(C_M00_AXI_WUSER_WIDTH-1):0], BUS = M00_AXI
PORT M00_AXI_WVALID = WVALID, DIR = O, BUS = M00_AXI
PORT M00_AXI_WREADY = WREADY, DIR = I, BUS = M00_AXI
PORT M00_AXI_BID = BID, DIR = I, VEC = [(C_M00_AXI_ID_WIDTH-1):0], BUS = M00_AXI
PORT M00_AXI_BRESP = BRESP, DIR = I, VEC = [1:0], BUS = M00_AXI
PORT M00_AXI_BUSER = BUSER, DIR = I, VEC = [(C_M00_AXI_BUSER_WIDTH-1):0], BUS = M00_AXI
PORT M00_AXI_BVALID = BVALID, DIR = I, BUS = M00_AXI
PORT M00_AXI_BREADY = BREADY, DIR = O, BUS = M00_AXI
PORT M00_AXI_ARID = ARID, DIR = O, VEC = [(C_M00_AXI_ID_WIDTH-1):0], BUS = M00_AXI
PORT M00_AXI_ARADDR = ARADDR, DIR = O, VEC = [(C_M00_AXI_ADDR_WIDTH-1):0], BUS = M00_AXI
PORT M00_AXI_ARLEN = ARLEN, DIR = O, VEC = [7:0], BUS = M00_AXI
PORT M00_AXI_ARSIZE = ARSIZE, DIR = O, VEC = [2:0], BUS = M00_AXI
PORT M00_AXI_ARBURST = ARBURST, DIR = O, VEC = [1:0], BUS = M00_AXI
PORT M00_AXI_ARLOCK = ARLOCK, DIR = O, BUS = M00_AXI
PORT M00_AXI_ARCACHE = ARCACHE, DIR = O, VEC = [3:0], BUS = M00_AXI
PORT M00_AXI_ARPROT = ARPROT, DIR = O, VEC = [2:0], BUS = M00_AXI
PORT M00_AXI_ARQOS = ARQOS, DIR = O, VEC = [3:0], BUS = M00_AXI
PORT M00_AXI_ARUSER = ARUSER, DIR = O, VEC = [(C_M00_AXI_ARUSER_WIDTH-1):0], BUS = M00_AXI
PORT M00_AXI_ARVALID = ARVALID, DIR = O, BUS = M00_AXI
PORT M00_AXI_ARREADY = ARREADY, DIR = I, BUS = M00_AXI
PORT M00_AXI_RID = RID, DIR = I, VEC = [(C_M00_AXI_ID_WIDTH-1):0], BUS = M00_AXI
PORT M00_AXI_RDATA = RDATA, DIR = I, VEC = [(C_M00_AXI_DATA_WIDTH-1):0], BUS = M00_AXI
PORT M00_AXI_RRESP = RRESP, DIR = I, VEC = [1:0], BUS = M00_AXI
PORT M00_AXI_RLAST = RLAST, DIR = I, BUS = M00_AXI
PORT M00_AXI_RUSER = RUSER, DIR = I, VEC = [(C_M00_AXI_RUSER_WIDTH-1):0], BUS = M00_AXI
PORT M00_AXI_RVALID = RVALID, DIR = I, BUS = M00_AXI
PORT M00_AXI_RREADY = RREADY, DIR = O, BUS = M00_AXI

END
